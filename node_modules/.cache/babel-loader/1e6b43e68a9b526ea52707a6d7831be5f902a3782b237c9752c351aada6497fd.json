{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aljo\\\\OneDrive\\\\Desktop\\\\New folder\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport HabitList from './components/HabitList';\nimport HabitForm from './components/HabitForm';\nimport Login from './components/Login';\nimport { auth, db } from './firebase';\nimport { collection, query, where, getDocs, addDoc, updateDoc, doc, onSnapshot } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [habits, setHabits] = useState([]);\n  const [user, setUser] = useState(null);\n\n  // Update auth listener to include real-time database updates\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        setUser(user.email);\n        // Set up real-time listener for habits\n        const habitsQuery = query(collection(db, 'habits'), where('userEmail', '==', user.email));\n        const unsubscribeSnapshot = onSnapshot(habitsQuery, snapshot => {\n          const habitsData = snapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          }));\n          setHabits(habitsData);\n        });\n        return () => unsubscribeSnapshot();\n      } else {\n        setUser(null);\n        setHabits([]);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  const addHabit = async habitName => {\n    try {\n      const newHabit = {\n        name: habitName,\n        completed: false,\n        streak: 0,\n        lastCompleted: null,\n        userEmail: user,\n        createdAt: new Date().toISOString()\n      };\n      await addDoc(collection(db, 'habits'), newHabit);\n      // No need to manually update state as onSnapshot will handle it\n    } catch (error) {\n      console.error(\"Error adding habit:\", error);\n    }\n  };\n  const toggleHabit = async id => {\n    try {\n      const habitRef = doc(db, 'habits', id);\n      const habit = habits.find(h => h.id === id);\n      const today = new Date().toDateString();\n      const isCompleted = !habit.completed;\n      await updateDoc(habitRef, {\n        completed: isCompleted,\n        streak: isCompleted ? habit.streak + 1 : habit.streak - 1,\n        lastCompleted: isCompleted ? today : habit.lastCompleted,\n        updatedAt: new Date().toISOString()\n      });\n      // No need to manually update state as onSnapshot will handle it\n    } catch (error) {\n      console.error(\"Error updating habit:\", error);\n    }\n  };\n  const handleLogout = async () => {\n    await auth.signOut();\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: setUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Habit Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", user, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-btn\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HabitForm, {\n      onAdd: addHabit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HabitList, {\n      habits: habits,\n      onToggle: toggleHabit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3ggpn0vyngZJESkOuJSiqi/4sLA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","HabitList","HabitForm","Login","auth","db","collection","query","where","getDocs","addDoc","updateDoc","doc","onSnapshot","jsxDEV","_jsxDEV","App","_s","habits","setHabits","user","setUser","unsubscribe","onAuthStateChanged","email","habitsQuery","unsubscribeSnapshot","snapshot","habitsData","docs","map","id","data","addHabit","habitName","newHabit","name","completed","streak","lastCompleted","userEmail","createdAt","Date","toISOString","error","console","toggleHabit","habitRef","habit","find","h","today","toDateString","isCompleted","updatedAt","handleLogout","signOut","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","onAdd","onToggle","_c","$RefreshReg$"],"sources":["C:/Users/Aljo/OneDrive/Desktop/New folder/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport HabitList from './components/HabitList';\r\nimport HabitForm from './components/HabitForm';\r\nimport Login from './components/Login';\r\nimport { auth, db } from './firebase';\r\nimport { collection, query, where, getDocs, addDoc, updateDoc, doc, onSnapshot } from 'firebase/firestore';\r\n\r\nfunction App() {\r\n  const [habits, setHabits] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Update auth listener to include real-time database updates\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUser(user.email);\r\n        // Set up real-time listener for habits\r\n        const habitsQuery = query(\r\n          collection(db, 'habits'),\r\n          where('userEmail', '==', user.email)\r\n        );\r\n        \r\n        const unsubscribeSnapshot = onSnapshot(habitsQuery, (snapshot) => {\r\n          const habitsData = snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            ...doc.data()\r\n          }));\r\n          setHabits(habitsData);\r\n        });\r\n\r\n        return () => unsubscribeSnapshot();\r\n      } else {\r\n        setUser(null);\r\n        setHabits([]);\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const addHabit = async (habitName) => {\r\n    try {\r\n      const newHabit = {\r\n        name: habitName,\r\n        completed: false,\r\n        streak: 0,\r\n        lastCompleted: null,\r\n        userEmail: user,\r\n        createdAt: new Date().toISOString()\r\n      };\r\n      await addDoc(collection(db, 'habits'), newHabit);\r\n      // No need to manually update state as onSnapshot will handle it\r\n    } catch (error) {\r\n      console.error(\"Error adding habit:\", error);\r\n    }\r\n  };\r\n\r\n  const toggleHabit = async (id) => {\r\n    try {\r\n      const habitRef = doc(db, 'habits', id);\r\n      const habit = habits.find(h => h.id === id);\r\n      const today = new Date().toDateString();\r\n      const isCompleted = !habit.completed;\r\n      await updateDoc(habitRef, {\r\n        completed: isCompleted,\r\n        streak: isCompleted ? habit.streak + 1 : habit.streak - 1,\r\n        lastCompleted: isCompleted ? today : habit.lastCompleted,\r\n        updatedAt: new Date().toISOString()\r\n      });\r\n      // No need to manually update state as onSnapshot will handle it\r\n    } catch (error) {\r\n      console.error(\"Error updating habit:\", error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    await auth.signOut();\r\n  };\r\n\r\n  if (!user) {\r\n    return <Login onLogin={setUser} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>Habit Tracker</h1>\r\n        <div className=\"user-info\">\r\n          <span>Welcome, {user}!</span>\r\n          <button onClick={handleLogout} className=\"logout-btn\">Logout</button>\r\n        </div>\r\n      </header>\r\n      <HabitForm onAdd={addHabit} />\r\n      <HabitList habits={habits} onToggle={toggleHabit} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}